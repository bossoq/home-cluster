apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jitsi
  # annotations:
  #   argocd.argoproj.io/sync-wave: "-1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: argocd
    server: "{{ .Values.spec.destination.server }}"
  project: default
  source:
    path: ""
    repoURL: "https://jitsi-contrib.github.io/jitsi-helm"
    targetRevision: "1.3.8"
    chart: jitsi-meet
    helm:
      parameters:
        - name: jvb.service.type
          value: LoadBalancer
        - name: jvb.publicIPs
          value: ["10.0.0.24"]
        - name: jibri.enabled
          value: "true"
        - name: jibri.singleUseMode
          value: "false"
        - name: jibri.replicaCount
          value: "1"
        - name: jibri.recording
          value: "true"
        - name: jibri.livestreaming
          value: "false"
        - name: jibri.persistence.enabled
          value: "true"
        - name: jibri.persistence.size
          value: 32Gi
        - name: jibri.shm.enabled
          value: "true"
      valueFiles:
        # Method 1: Mount the gpg/age key from a kubernetes secret as volume
        # secrets+gpg-import://<key-volume-mount>/<key-name>.asc?<relative/path/to/the/encrypted/secrets.yaml>
        # secrets+age-import://<key-volume-mount>/<key-name>.txt?<relative/path/to/the/encrypted/secrets.yaml>
        # Example Method 1: (Assumptions: key-volume-mount=/helm-secrets-private-keys, key-name=key, secrets.yaml is in the templates folder)
        # - secrets+age-import:///helm-secrets-private-keys/key.txt?secret-values.enc.yaml
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true