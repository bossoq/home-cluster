argo-cd:
  dex:
    enabled: false

  configs:
    repositories:
      home-cluster-git-repo:
        type: git
        name: home-cluster
        url: https://github.com/bossoq/home-cluster.git
      argo-cd-helm-repo:
        type: helm
        name: argo-cd
        url: https://argoproj.github.io/argo-helm
      jetstack-helm-repo:
        type: helm
        name: jetstack
        url: https://charts.jetstack.io
      intel-helm-repo:
        type: helm
        name: intel
        url: https://intel.github.io/helm-charts
      nfd-helm-repo:
        type: helm
        name: nfd
        url: https://kubernetes-sigs.github.io/node-feature-discovery/charts
      jitsi-helm-repo:
        type: helm
        name: jitsi
        url: https://jitsi-contrib.github.io/jitsi-helm
      openproject-helm-repo:
        type: helm
        name: openproject
        url: https://charts.openproject.org
    cm:
      helm.valuesFileSchemes: >-
        secrets+gpg-import, secrets+gpg-import-kubernetes,
        secrets+age-import, secrets+age-import-kubernetes,
        secrets,secrets+literal,
        https

  server:
    extraArgs:
      - --insecure
    config:
      kustomize.buildOptions: "--enable-alpha-plugins"
      helm.valuesFileSchemes: >-
        secrets+gpg-import, secrets+gpg-import-kubernetes,
        secrets+age-import, secrets+age-import-kubernetes,
        secrets,secrets+literal,
        https

    additionalApplications:
      # Self-managed ArgoCD
      - name: argo-cd
        namespace: argocd
        destination:
          namespace: argocd
          server: https://kubernetes.default.svc
        project: argocd
        source:
          path: charts/argo-cd
          repoURL: https://github.com/bossoq/home-cluster.git
          targetRevision: HEAD
        syncPolicy:
          automated:
            prune: true
            selfHeal: true

      # Root app of apps '/apps' path
      - name: apps
        namespace: argocd
        destination:
          namespace: argocd
          server: https://kubernetes.default.svc
        project: default
        source:
          path: apps
          repoURL: https://github.com/bossoq/home-cluster.git
          targetRevision: HEAD
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

      # Root app of infra '/infra' path
      - name: infra
        namespace: argocd
        destination:
          namespace: infra
          server: https://kubernetes.default.svc
        project: infra
        source:
          path: infra
          repoURL: https://github.com/bossoq/home-cluster.git
          targetRevision: HEAD
          helm:
            valueFiles:
              - secrets+age-import:///helm-secrets-private-keys/key.txt?secret-values.enc.yaml
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true

    additionalProjects:
      # Default Project for ArgoCD
      - name: argocd
        namespace: argocd
        additionalLabels: {}
        additionalAnnotations: {}
        description: ArgoCD Project
        sourceRepos:
          - "*"
        destinations:
          - namespace: argocd
            server: https://kubernetes.default.svc
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        orphanedResources:
          warn: false

      - name: infra
        namespace: argocd
        additionalLabels: {}
        additionalAnnotations: {}
        description: Infrastructure Project
        sourceRepos:
          - "*"
        destinations:
          - namespace: argocd
            server: https://kubernetes.default.svc
          - namespace: infra
            server: https://kubernetes.default.svc
          - namespace: kube-system
            server: https://kubernetes.default.svc
          - namespace: cert-manager
            server: https://kubernetes.default.svc
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"
        orphanedResources:
          warn: false

    ingress:
      enabled: true
      annotations: {}
      labels: {}
      ingressClassName: ""
      hosts:
        - argocd.picturo.us
      paths:
        - /
      pathType: Prefix
      # extraPaths: []
      extraPaths:
        - path: /*
          pathType: Prefix
          backend:
            service:
              name: ssl-redirect
              port:
                name: use-annotation
      tls:
        - secretName: argocd-server-tls
          hosts:
            - argocd.picturo.us
      https: false

    certificate:
      enabled: true
      secretName: argocd-server-tls
      domain: argocd.picturo.us
      issuer:
        kind: ClusterIssuer
        name: letsencrypt-prod

  repoServer:
    volumes:
      - name: helm-secrets-private-keys
        secret:
          secretName: helm-secrets-private-keys
      - name: custom-tools
        emptyDir: {}
    volumeMounts:
      - mountPath: /helm-secrets-private-keys/
        name: helm-secrets-private-keys
      - mountPath: /custom-tools
        name: custom-tools
      - mountPath: /usr/local/sbin/helm
        subPath: helm
        name: custom-tools
    env:
      - name: HELM_PLUGINS
        value: /custom-tools/helm-plugins/
      - name: HELM_SECRETS_CURL_PATH
        value: /custom-tools/curl
      - name: HELM_SECRETS_SOPS_PATH
        value: /custom-tools/sops
      - name: HELM_SECRETS_VALS_PATH
        value: /custom-tools/vals
      - name: HELM_SECRETS_KUBECTL_PATH
        value: /custom-tools/kubectl
      - name: HELM_SECRETS_BACKEND
        value: sops
      - name: HELM_SECRETS_VALUES_ALLOW_SYMLINKS
        value: "false"
      - name: HELM_SECRETS_VALUES_ALLOW_ABSOLUTE_PATH
        value: "true"
      - name: HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL
        value: "false"
      - name: HELM_SECRETS_WRAPPER_ENABLED
        value: "true"
      - name: HELM_SECRETS_DECRYPT_SECRETS_IN_TMP_DIR
        value: "true"
      - name: HELM_SECRETS_HELM_PATH
        value: /usr/local/bin/helm
      - name: SOPS_AGE_KEY_FILE
        # Multiple keys can be separated by space
        value: /helm-secrets-private-keys/key.txt
    initContainers:
      - name: download-tools
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        command: [sh, -ec]
        env:
          - name: HELM_SECRETS_VERSION
            value: "4.5.1"
          - name: KUBECTL_VERSION
            value: "1.29.1"
          - name: VALS_VERSION
            value: "0.33.1"
          - name: SOPS_VERSION
            value: "3.8.1"
        args:
          - |
            mkdir -p /custom-tools/helm-plugins
            wget -qO- https://github.com/jkroepke/helm-secrets/releases/download/v${HELM_SECRETS_VERSION}/helm-secrets.tar.gz | tar -C /custom-tools/helm-plugins -xzf-;
            wget -qO /custom-tools/curl https://github.com/moparisthebest/static-curl/releases/latest/download/curl-amd64
            wget -qO /custom-tools/sops https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64
            wget -qO /custom-tools/kubectl https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
            wget -qO- https://github.com/helmfile/vals/releases/download/v${VALS_VERSION}/vals_${VALS_VERSION}_linux_amd64.tar.gz | tar -xzf- -C /custom-tools/ vals;
            cp /custom-tools/helm-plugins/helm-secrets/scripts/wrapper/helm.sh /custom-tools/helm
            chmod +x /custom-tools/*
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools
