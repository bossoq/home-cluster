apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-gateway
  labels:
    app: taiga-gateway
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: taiga-gateway
  template:
    metadata:
      labels:
        app: taiga-gateway
    spec:
      containers:
        - image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
          imagePullPolicy: "{{ .Values.gateway.image.pullPolicy }}"
          name: taiga-gateway
          resources: {}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: taiga-gateway-config
      volumes:
        - name: taiga-gateway-config
          configMap:
            name: taiga-gateway-config
            items:
              - key: default.conf
                path: default.conf
      restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: taiga-gateway-config
data:
  default.conf: |
    server {
      listen 80 default_server;

      client_max_body_size 100M;
      charset utf-8;

      # Frontend
      location / {
        proxy_pass http://taiga-front.argocd.svc.cluster.local/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
      }

      # API
      location /api/ {
        proxy_pass http://taiga-back.argocd.svc.cluster.local:8000/api/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
      }

      # Admin
      location /admin/ {
        proxy_pass http://taiga-back.argocd.svc.cluster.local:8000/admin/;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
      }

      # Static
      location /static/ {
        alias /taiga/static/;
      }

      # Media
      location /_protected/ {
        internal;
        alias /taiga/media/;
        add_header Content-disposition "attachment";
      }

      # Unprotected section
      location /media/exports/ {
        alias /taiga/media/exports/;
        add_header Content-disposition "attachment";
      }

      location /media/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://taiga-protected.argocd.svc.cluster.local:8003/;
        proxy_redirect off;
      }

      # Events
      location /events {
        proxy_pass http://taiga-events.argocd.svc.cluster.local:8888/events;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
      }
    }
