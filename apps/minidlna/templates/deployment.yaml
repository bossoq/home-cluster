apiVersion: apps/v1
kind: Deployment
metadata:
  name: minidlna
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: minidlna
  template:
    metadata:
      labels:
        app: minidlna
    spec:
      hostNetwork: true
      volumes:
        - name: minidlna-log
          persistentVolumeClaim:
            claimName: minidlna-log
        - name: minidlna-db
          persistentVolumeClaim:
            claimName: minidlna-db
        - name: minidlna-data
          persistentVolumeClaim:
            claimName: minidlna-data
      containers:
        - env:
          # - name: PUID
          #   value: "65534"
          - name: PGID
            value: "100"
          - name: TZ
            value: Asia/Bangkok
          - name: MINIDLNA_ROOT_CONTAINER
            value: "."
          - name: MINIDLNA_DIR_A_1
            value: /media/Musics
          - name: MINIDLNA_DIR_V_1
            value: /media/Movies
          - name: MINIDLNA_DIR_V_2
            value: /media/TVShows
          - name: MINIDLNA_FRIENDLY_NAME
            value: MiniDLNA
          - name: MINIDLNA_ENABLE_INOTIFY
            value: "YES"
          - name: MINIDLNA_FORCE_SORT_CRITERIA
            value: "+upnp:class,-dc:date,+upnp:album,+upnp:originalTrackNumber,+dc:title"
          securityContext:
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          name: minidlna
          resources: {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /log
              name: minidlna-log
            - mountPath: /db
              name: minidlna-db
            - mountPath: /media
              name: minidlna-data
      restartPolicy: Always